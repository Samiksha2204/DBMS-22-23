Problem Statement-Cursors: (All types: Implicit, Explicit, Cursor FOR Loop, Parameterized Cursor) 
Write a PL/SQL block of code using parameterized Cursor that will merge the data available in the newly created table 
N_RollCall with the data available in the table O_RollCall. 
If the data in the first table already exist in the second table then that data should be skipped.

mysql> create database assignment4;
Query OK, 1 row affected (0.01 sec)

mysql> use assignment4;
Database changed
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| ass3               |
| assignment4        |
| bms                |
| information_schema |
| library            |
| mysql              |
| performance_schema |
| sakila             |
| samiksha           |
| student            |
| sys                |
| world              |
+--------------------+
12 rows in set (0.00 sec)
mysql> create table old_roll(roll int,name varchar(10));
Query OK, 0 rows affected (0.02 sec)

mysql> create table new_roll(roll int,name varchar(10));
Query OK, 0 rows affected (0.02 sec)

mysql> insert into old_roll values(1,'samiksha');
Query OK, 1 row affected (0.01 sec)

mysql> insert into old_roll values(2,'Vaishnavi');
Query OK, 1 row affected (0.00 sec)

mysql> insert into old_roll values(3,'Deepti');
Query OK, 1 row affected (0.00 sec)

mysql> insert into old_roll values(4,'Asmita');
Query OK, 1 row affected (0.00 sec)

mysql> insert into new_roll values(3,'Trupti');
Query OK, 1 row affected (0.01 sec)

mysql> insert into new_roll values(5,'Vidya');
Query OK, 1 row affected (0.00 sec)

mysql> insert into new_roll values(6,'sneha');
Query OK, 1 row affected (0.00 sec)

mysql> insert into new_roll values(1,'shravani');
Query OK, 1 row affected (0.00 sec)

mysql> select * from old_roll;
+------+-----------+
| roll | name      |
+------+-----------+
|    1 | samiksha  |
|    2 | Vaishnavi |
|    3 | Deepti    |
|    4 | Asmita    |
+------+-----------+
4 rows in set (0.00 sec)

mysql> select * from new_roll;
+------+----------+
| roll | name     |
+------+----------+
|    3 | Trupti   |
|    5 | Vidya    |
|    6 | sneha    |
|    1 | shravani |
+------+----------+
4 rows in set (0.00 sec)

mysql> delimiter $
mysql> create procedure roll_list()
    -> begin
    -> declare oldrollnumber int;
    -> declare oldname varchar(10);
    -> declare newrollnumber int;
    -> declare newname varchar(10);
    -> declare done int default false;
    -> declare c1 cursor for select roll,name from old_roll;
    -> declare c2 cursor for select roll,name from new_roll;
    -> declare continue handler for not found set done=true;
    -> open c1;
    -> loop1:loop
    -> fetch c1 into oldrollnumber,oldname;
    -> if done then
    -> leave loop1;
    -> end if;
    -> open c2;
    ->
    -> loop2:loop
    -> fetch c2 into newrollnumber,newname;
    -> if done then
    -> insert into new_roll values(oldrollnumber,oldname);
    -> set done=false;
    -> close c2;
    -> leave loop2;
    -> end if;
    -> if oldrollnumber=newrollnumber then
    -> leave loop2;
    -> end if;
    -> end loop;
    -> end loop;
    -> close c1;
    -> end $
Query OK, 0 rows affected (0.02 sec)

mysql> delimiter ;
mysql> call roll_list();
ERROR 1325 (24000): Cursor is already open
mysql> select * from new_roll;
+------+----------+
| roll | name     |
+------+----------+
|    3 | Trupti   |
|    5 | Vidya    |
|    6 | sneha    |
|    1 | shravani |
+------+----------+
4 rows in set (0.00 sec)